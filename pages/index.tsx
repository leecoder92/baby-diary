import type { NextPage } from "next";
import Head from "next/head";
import Image from "next/image";
import styles from "../styles/Home.module.css";
import SearchBar from "../components/search";
import { useEffect, useState, useRef } from "react";
import dayjs from "dayjs";
import { useRouter } from "next/router";
import axios from "axios";

interface Diary {
  title: string;
  contents: string;
  created_at: string;
}

const Home: NextPage = () => {
  const router = useRouter();
  const [diaries, setDiaries] = useState<Diary[]>();
  const [original, setOriginal] = useState<Diary[]>();
  const [loadNew, setLoadNew] = useState<boolean>(false);
  useEffect(() => {
    axios({
      method: "get",
      url: "http://localhost:3000/api/diary",
    }).then((res) => {
      setDiaries(res.data);
      setOriginal(res.data);
    });
  }, []);

  const [page, setPage] = useState(10);

  useEffect(() => {
    document.addEventListener("scroll", (e: any) => {
      const { scrollHeight, scrollTop, clientHeight } =
        document.documentElement;
      if (scrollHeight - scrollTop === clientHeight) {
        loadMore();
      }
    });
  }, []);

  const loadMore = () => {
    setPage((prev) => prev + 10);
  };

  useEffect(() => {
    const getNewDiary = setTimeout(() => {
      axios({
        method: "get",
        url: "/api/diary/new",
      }).then((res) => {
        setLoadNew(true);
        console.log(res.data);
      });
    }, 10000);
    return () => clearTimeout(getNewDiary);
  }, []);

  return (
    <div className={styles.container}>
      <Head>
        <title>Baby Diary</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      {diaries && (
        <SearchBar
          original={original}
          diaries={diaries}
          setDiaries={setDiaries}
          setPage={setPage}
        />
      )}

      {diaries &&
        diaries.slice(0, page).map((diary, index) => {
          return (
            <div
              style={{
                border: "1px solid black",
                marginBottom: "15px",
                padding: "10px",
                position: "relative",
              }}
              key={index}
              onClick={() => {
                if (original) {
                  const originalIndex = original.findIndex(
                    (item) => item.title === diary.title
                  );
                  router.push(`/diary/${originalIndex}`);
                }
              }}
            >
              <p
                style={{
                  position: "absolute",
                  top: "-25px",
                  backgroundColor: "white",
                }}
              >
                {diary.title}
              </p>
              <p className={styles.diaryContents}>{diary.contents}</p>
              <div style={{ textAlign: "end" }}>
                <p>{dayjs(diary.created_at).format("YYYY년 MM월 DD일")}</p>
              </div>
            </div>
          );
        })}
    </div>
  );
};

export default Home;
